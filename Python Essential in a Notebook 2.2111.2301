{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1SOsQ8OTLl1YySNIJWG-qy7eXOWrbS7Ti","timestamp":1637571725859},{"file_id":"https://github.com/project303/DEV130/blob/main/Python%20Essential%20in%20a%20Notebook.ipynb","timestamp":1632057849448}],"collapsed_sections":["4WtPKrzklDY9","pXPi49MilGgT","b2UzZkdSlKII","tXSSbwemlPxD","7ecKUm6jStP5"],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"km7jl7hA4fio"},"source":["# Python Essential  in A Notebook"]},{"cell_type":"code","metadata":{"id":"fP-fBzp-poPW"},"source":["#Release: 1.2109.1901"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Mhjj6oErlpEn"},"source":["#0.Python Basic Syntax"]},{"cell_type":"markdown","metadata":{"id":"_EetFAjeq0-c"},"source":["## Lines and Indentation\n","\n"]},{"cell_type":"markdown","metadata":{"id":"N7EZTaODP8DH"},"source":["Pada Python, setiap statement dipisahkan oleh baris"]},{"cell_type":"code","metadata":{"id":"wWXoh-fuP7bM"},"source":["i = 12\n","j = 2\n","k = i + j\n","print(k)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"deZ_rz5lQhxg"},"source":["Setiap block statement memiliki indent yang sama"]},{"cell_type":"code","metadata":{"id":"Z2vDsXnMoNtl"},"source":["if i > j:\n","   print(\"True\")\n","   print(\"Nilai i: \", i, \" dan nilai j: \", j)\n","else:\n","   print(\"False\")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"59D15C1UrdFB"},"source":["Jalankan kode di bawah ini, perhatikan apa yang akan terjadi dan kenapa"]},{"cell_type":"code","metadata":{"id":"Qt7GCEogr2L5","colab":{"base_uri":"https://localhost:8080/","height":136},"executionInfo":{"status":"error","timestamp":1637652655494,"user_tz":-420,"elapsed":383,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"5fc04b86-1abb-448f-cffa-d0de8ba1a19a"},"source":["if 3 > 2:\n","print(\"True\")\n","else:\n","print(\"False\")"],"execution_count":null,"outputs":[{"output_type":"error","ename":"IndentationError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-3-332dac896bd8>\"\u001b[0;36m, line \u001b[0;32m2\u001b[0m\n\u001b[0;31m    print(\"True\")\u001b[0m\n\u001b[0m        ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m expected an indented block\n"]}]},{"cell_type":"code","metadata":{"id":"WAC1L7gSsELG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637652659006,"user_tz":-420,"elapsed":347,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"d0ad02ed-2baf-4729-941e-c66905710c50"},"source":["if 3 > 4:\n","  print(\"True\")\n","else:\n"," print(\"False\")"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["False\n"]}]},{"cell_type":"code","metadata":{"id":"USDSvR7_sVjv","colab":{"base_uri":"https://localhost:8080/","height":136},"executionInfo":{"status":"error","timestamp":1637652662491,"user_tz":-420,"elapsed":370,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"4ebadaf2-5ebe-417e-fcae-c5b22e092317"},"source":["if 3 > 2:\n","   print(\"True\")\n"," print(\"False\")"],"execution_count":null,"outputs":[{"output_type":"error","ename":"IndentationError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-5-bd0c3aef30ff>\"\u001b[0;36m, line \u001b[0;32m3\u001b[0m\n\u001b[0;31m    print(\"False\")\u001b[0m\n\u001b[0m                  ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unindent does not match any outer indentation level\n"]}]},{"cell_type":"code","metadata":{"id":"PkWy-xRJsEDm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637652668005,"user_tz":-420,"elapsed":358,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"85a7b45f-5b4c-4194-8f5d-33be1ef53c58"},"source":["if 3 > 2:\n","   print(\"True\")\n","print(\"False\")"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["True\n","False\n"]}]},{"cell_type":"markdown","metadata":{"id":"QCm22d-3tK_F"},"source":["Semua baris yang memiliki indent  dengan jumlah spasi yang sama akan membentuk blok."]},{"cell_type":"code","metadata":{"id":"tN_wVQz9tPY8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637652675479,"user_tz":-420,"elapsed":364,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"196d7d15-7b37-4c6d-de79-7824966f070c"},"source":["a = 11\n","if a > 2:\n","  print(\"Greater than 2\")\n","  if a > 10:\n","    print(\"Greater than 10\")\n","    print(\"A pretty big number\")\n","  else:\n","    print(\"Not greater than 10\")\n","  \n","else:\n"," print(\"Not greater than 2\")\n"," print(\"Still the same else block\")\n","\n","print(\"Print no matter what\")\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Greater than 2\n","Greater than 10\n","A pretty big number\n","Print no matter what\n"]}]},{"cell_type":"markdown","metadata":{"id":"cmPue0mYkFwK"},"source":["## Multiline Statements\n"]},{"cell_type":"markdown","metadata":{"id":"EfHAUub6S041"},"source":["Beberapa cara penulisan untuk multiline statement"]},{"cell_type":"code","metadata":{"scrolled":true,"id":"_Kpjxt7KkFwS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667358471762,"user_tz":-420,"elapsed":382,"user":{"displayName":"Urfah Urfah","userId":"10241733715447857036"}},"outputId":"d8769a43-5429-4bfc-d297-e59c403944d0"},"source":["print(\"This is a \\\n","multiline \\\n","statement\")\n","\n","print(\"This is a \" \n","      \"multiline \"\n","      \"statement \")\n","\n","a = 100 + \\\n","    100 + \\\n","    100\n","a"],"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["This is a multiline statement\n","This is a multiline statement \n"]},{"output_type":"execute_result","data":{"text/plain":["300"]},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","metadata":{"id":"GMaaycAGbTIn"},"source":["## Multiple Statements in a Line"]},{"cell_type":"markdown","metadata":{"id":"NkEhMO-wS_wU"},"source":["Jika ingin menuliskan lebih dari satu statement perbaris, maka digunakan **semicolon (;)** sebagai pemisah antar statement"]},{"cell_type":"code","metadata":{"id":"34jjr3y8bW8P"},"source":["a = 10; b = a + 2; print(b)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"cguNqMKcguaP"},"source":["## Python Block of Code"]},{"cell_type":"markdown","metadata":{"id":"oOKbSyqTTyaW"},"source":["Berikut contoh penulisan block pada Python"]},{"cell_type":"code","metadata":{"id":"SakGmtmD2Nwk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667358427347,"user_tz":-420,"elapsed":4,"user":{"displayName":"Urfah Urfah","userId":"10241733715447857036"}},"outputId":"129c3e16-6bea-44d7-b3c7-44f0cbba864d"},"source":["if True:\n","   print(\"Answer:\")\n","   print(\"True\")\n","else:\n","  print(\"Answer:\")\n","  print(\"False\")"],"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Answer:\n","True\n"]}]},{"cell_type":"code","metadata":{"id":"nL0ucCcMg1wa","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667358433267,"user_tz":-420,"elapsed":362,"user":{"displayName":"Urfah Urfah","userId":"10241733715447857036"}},"outputId":"91986fda-2de5-41c8-e7f9-0559e8be17a0"},"source":["if True:\n","    print(\"Answer:\")\n","    print(\"True\")\n","else:\n","    print(\"Answer:\")\n","print(\"False\")"],"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Answer:\n","True\n","False\n"]}]},{"cell_type":"markdown","metadata":{"id":"KxjERrjPhH0y"},"source":["## Python Comments and Docstring"]},{"cell_type":"markdown","metadata":{"id":"wyx5WGNmUAp8"},"source":["Komentar akan didahului dengan tanda **#**"]},{"cell_type":"code","metadata":{"id":"oCtiONlPUMao"},"source":["# This is a line of comment"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"UWckyL_ahQBe"},"source":["# This is a comment\n","print(\"Hello Python!\") # This line prints : Hello Python!\n","\n","print(\"This is \" #this is a comment\n","      \"a multiline statement\")\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"PKSN_LWTUrpk"},"source":["**docstring** digunakan untuk mendokumentasikan modul, kelas, fungsi, atau metode, sehingga programmer dapat memahami apa yang dilakukannya tanpa harus membaca detail kodenya."]},{"cell_type":"code","metadata":{"id":"kVKF1ebAhgfK","colab":{"base_uri":"https://localhost:8080/","height":36},"executionInfo":{"status":"ok","timestamp":1637652732118,"user_tz":-420,"elapsed":352,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"67f9e497-75c5-4415-d68b-b772d0bd5a5b"},"source":["def mysqrt(n):     \n","  '''Takes in a number n, returns the square of n'''\n","\n","  return n**2\n","\n","mysqrt.__doc__"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Takes in a number n, returns the square of n'"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","metadata":{"id":"xA8wuLurAU59"},"source":["## Print"]},{"cell_type":"code","metadata":{"id":"F66cic-lATfQ"},"source":["x = 2\n","print('Value of x:', x)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"pJQ-suj3A9Nx"},"source":["Format **print** untuk nilai integer and float"]},{"cell_type":"code","metadata":{"id":"P-66flYDA7vu"},"source":["# print integer and float value\n","print(\"Total: %2d, Average: %5.2f\" % (1, 05.333))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-IHVzUtzBOCT"},"source":["# print integer value\n","print(\"Total students: -%3d-, Boys : -%3d-\" % (247, 1))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4fRGjATdEs49"},"source":[],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jyNL1nSNEuKz"},"source":["## Variable"]},{"cell_type":"markdown","metadata":{"id":"x_aWXoG6WfmS"},"source":["setiap variable tidak perlu didefinisikan type-nya terlebih dahulu. Type variable akan mengikuti nilai yang diberikan ke sebuah variabel"]},{"cell_type":"code","metadata":{"id":"shoRYgGSE1N0"},"source":["x = 2\n","type(x)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"YO0v71ROE56u"},"source":["x = 'dua'\n","type(x)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"K7Rwx2jz2OVl"},"source":["#1.Python Numbers\n"]},{"cell_type":"markdown","metadata":{"id":"jxBgKRd5Dlu0"},"source":["## Integer"]},{"cell_type":"code","metadata":{"id":"eIP2xZZN2OVl"},"source":["my_num = 7\n","my_num"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-rkeWWiDIIPx"},"source":["print(my_num)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"YMznP7XoIME-"},"source":["print('Value:', my_num)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JPjUkZxUHi_S"},"source":["type(my_num)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"XQGtip7sHmuj"},"source":["print(isinstance(my_num, int))\n","print(isinstance(my_num, float))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"fgE1CMbQvwcd"},"source":["my_num = int('7')\n","print(my_num)\n","print(type(my_num))\n","print(isinstance(my_num, int))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"0o-Nu60R2OVo"},"source":["## Float"]},{"cell_type":"code","metadata":{"id":"iIh12Syz2OVp"},"source":["my_fnum = 1.0\n","print(my_fnum)\n","print(type(my_fnum))\n","print(isinstance(my_fnum, float))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"sJbnj1mqv3wQ"},"source":["my_fnum = float(my_num)\n","print(my_fnum)\n","print(type(my_fnum))\n","print(isinstance(my_fnum, float))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Ob4ejPxDm-oN"},"source":["Pembagian type `int` akan menghasilkan `float`"]},{"cell_type":"code","metadata":{"id":"ts7JLYuB2OVq"},"source":["num1 = 4\n","num2 = 2\n","print(type(num1))\n","print(type(num2))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"vjconkgOFwC2"},"source":["num3 = num1 / num2\n","print(num3)\n","type(num3)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zNCv2adp-YVJ"},"source":["from fractions import Fraction\n","\n","my_fraction = Fraction(8, -10)\n","print(my_fraction)\n","type(my_fraction)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"R401E2TA6Q1W"},"source":["#2.Sequence\n","\n","Sequence adalah kumpulan objek yang elemennya dapat diakses menggunakan **index**\n","\n","Sequence yang paling umum digunakan: **String, List, Tuple**"]},{"cell_type":"markdown","metadata":{"id":"CF5ciIZW7EKY"},"source":["## Mutability\n","\n","Ada 2 jenis sequence dalam python berdasar perubahannya : *mutable* dan *immutable* object.\n"]},{"cell_type":"markdown","metadata":{"id":"_hheNE1j84D2"},"source":["###Mutable objects \n","\n","Dapat diupdate / diubah di tempat. Dapat diganti/diupdate elemennya, maupun diubah urutannya.\n","\n","**List** adalah mutable sequence."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8ZZ4zfAD7lHE","executionInfo":{"status":"ok","timestamp":1637582258602,"user_tz":-420,"elapsed":399,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"abdb5e01-afce-4959-9b80-17c07146a7e1"},"source":["fruits = [\"apple\", \"banana\", \"grape\"] #list\n","print(fruits)\n","\n","fruits[0] = \"peach\"\n","print(fruits)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['apple', 'banana', 'grape']\n","['peach', 'banana', 'grape']\n"]}]},{"cell_type":"markdown","metadata":{"id":"izf9BRkq8zzH"},"source":["### Immutable objects \n","\n","Nilainya tidak dapat diubah 'di tempat' (in-place update), yaitu urutan maupun nilai elemennya tidak dapat diganti.\n","\n","**String** dan **Tuple** adalah immutable sequence."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"id":"4m4rOYnssEjw","executionInfo":{"status":"error","timestamp":1637652461894,"user_tz":-420,"elapsed":13,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"0336e62b-da1a-444d-b85c-7fb9e7e3d699"},"source":["mystr = \"Hello World!\" #string\n","mystr[1] = 'a'\n","print(mystr)"],"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-c28467b8b083>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mmystr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"Hello World!\"\u001b[0m \u001b[0;31m#string\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mmystr\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'a'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmystr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: 'str' object does not support item assignment"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":248},"id":"PV8WGbVR7g1c","executionInfo":{"status":"error","timestamp":1637582069974,"user_tz":-420,"elapsed":396,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"b9ac2aaa-f00c-44b1-f211-afcb16b8b45c"},"source":["fruits = (\"apple\", \"banana\", \"grape\") #tuple\n","fruits[0] = \"peach\"\n","print(fruits)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["('apple', 'banana', 'grape')\n"]},{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-4-1243870d5c66>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mfruits\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;34m\"apple\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"banana\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"grape\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfruits\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mfruits\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"peach\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfruits\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: 'tuple' object does not support item assignment"]}]},{"cell_type":"markdown","metadata":{"id":"eswmGbz-l8Xi"},"source":["## Sequence Operation"]},{"cell_type":"code","metadata":{"id":"WTKBteH0LWRc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637652483679,"user_tz":-420,"elapsed":382,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"0c1961a6-1280-4959-8f0a-fb8d5a832945"},"source":["#length of sequences\n","\n","a = 'Hello '\n","print(len(a))\n","\n","b = [1, 2, 'a', [3, 4], (5, 6)]\n","print(len(b))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["6\n","5\n"]}]},{"cell_type":"markdown","metadata":{"id":"iJzLV6WUJtbY"},"source":["### Indexing and Slicing"]},{"cell_type":"code","metadata":{"id":"hpxt_p5iMjfx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637587405530,"user_tz":-420,"elapsed":366,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"bcc0ba49-469b-425d-a504-3ac2f81dfceb"},"source":["b = [1, 2, 'a', [3, 4], (5, 6)]\n","b[0]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","metadata":{"id":"NVQUtkSqMngV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637587408676,"user_tz":-420,"elapsed":418,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"5a70c89c-dbf5-44de-bbaa-0a8b7097ef69"},"source":["b[0:3]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1, 2, 3]"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"bypt2xqLMz33","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637587411183,"user_tz":-420,"elapsed":408,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"1fd26f0b-efdf-42ec-e108-9957d10cd2a6"},"source":["b[:3]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1, 2, 3]"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5kMQ9lnk0kIs","executionInfo":{"status":"ok","timestamp":1637587546907,"user_tz":-420,"elapsed":379,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"5ccd2334-b184-466c-fc00-e5063d71374d"},"source":["print( b[-4])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n"]}]},{"cell_type":"code","metadata":{"id":"OoyYbE2gMcdv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637587589651,"user_tz":-420,"elapsed":354,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"72b3d54a-c302-4085-811b-6399b1bf18d2"},"source":["print( b[:-2])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 2, 'a']\n"]}]},{"cell_type":"code","metadata":{"id":"Hbj8b5PHJrvO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637587526930,"user_tz":-420,"elapsed":403,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"d8e3e3d5-46ad-4444-881d-7092e93114cd"},"source":["a = 'Hello World!'\n","print( a[-6:] + a[:5])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["World!Hello\n"]}]},{"cell_type":"code","metadata":{"id":"N2dCcp-9JlEJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637587599235,"user_tz":-420,"elapsed":461,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"30b644e2-fa69-4abf-8442-ac4dee8f46bf"},"source":["#iteration\n","for item in a:\n","  print(item)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["H\n","e\n","l\n","l\n","o\n"," \n","W\n","o\n","r\n","l\n","d\n","!\n"]}]},{"cell_type":"markdown","metadata":{"id":"Cmm7gcvYLrfL"},"source":["### Concatenation"]},{"cell_type":"code","metadata":{"id":"BeifG0B9mAb3"},"source":["#concatenate string\n","a = 'Hello '\n","print( a + 'World!' )"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"CE1kNgYaLpom","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637587740734,"user_tz":-420,"elapsed":378,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"63981511-1c24-4395-d016-5c3434be1d0e"},"source":["#concatenate list\n","b = [1 , 2]\n","c = ['a', 'b']\n","print( b + c )"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 2, 'a', 'b']\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5-6MLoXx1Fsg","executionInfo":{"status":"ok","timestamp":1637587791091,"user_tz":-420,"elapsed":359,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"cd2055ac-53c5-4d0a-d8c7-5a5db28ec0f7"},"source":["#concatenate tuple\n","d = 1 , 2\n","e = ('a', 'b')\n","print( d + e )"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(1, 2, 'a', 'b')\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":192},"id":"2suLLbl81UCw","executionInfo":{"status":"error","timestamp":1637587744765,"user_tz":-420,"elapsed":378,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"b94f65f7-aa30-4a0c-aab7-d4372bc4a568"},"source":["#concatenation should be between the same type\n","print(c + d)"],"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-48-055385a233ae>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#concatenation should be between the same type\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mc\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0md\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: can only concatenate list (not \"tuple\") to list"]}]},{"cell_type":"code","metadata":{"id":"Jfuu3ZjIMBkz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637587753877,"user_tz":-420,"elapsed":580,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"66e5ef47-56e3-422b-d8fc-2cfc4d81705a"},"source":["type(b)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["list"]},"metadata":{},"execution_count":49}]},{"cell_type":"code","metadata":{"id":"DHFfU6cImPeK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637587867871,"user_tz":-420,"elapsed":366,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"d89e827a-49bc-4036-f758-1fb3da01ec43"},"source":["#sequence multiplication\n","a = 'Hello World!'\n","print( a * 3 )\n"," \n","b = 1, 2, 3, 4\n","print( b * 2 )"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Hello World!Hello World!Hello World!\n","(1, 2, 3, 4, 1, 2, 3, 4)\n"]}]},{"cell_type":"code","metadata":{"id":"ekV26EBDme_o","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637586605223,"user_tz":-420,"elapsed":387,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"108cd26f-7f82-4569-c450-251c7af9e1d0"},"source":["#membership testing\n","a = 'Hello World!'\n","print( 'Hello' in a )\n","print( 'Hello' not in a)\n","\n","b = [1, 2, 3, 4]\n","print( 7 in b )\n","print( 10 not in b )"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["True\n","False\n","False\n","True\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0AYD0sz7jA7r","executionInfo":{"status":"ok","timestamp":1637586774034,"user_tz":-420,"elapsed":364,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"8bc022ef-00d6-440f-df9f-969eebcf4e74"},"source":["#count occurence\n","a = 'Hello World!'\n","print( a.count('He'))\n","print( a.count('Her'))\n","\n","b = [1, 2, 3, 4, 1]\n","print(b.count(1))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","0\n","2\n"]}]},{"cell_type":"markdown","metadata":{"id":"LNJwdnk1x4RE"},"source":["complete list of operator in https://docs.python.org/3/library/stdtypes.html#common-sequence-operations"]},{"cell_type":"markdown","metadata":{"id":"Fto9d_q69jQH"},"source":["#3.Strings"]},{"cell_type":"markdown","metadata":{"id":"dUN7LM_hcaA5"},"source":["String diidentifikasikan dengan tanda **petik tunggal (')** atau **petik ganda (\")** yang mengapitnya"]},{"cell_type":"code","metadata":{"id":"1qjYMHScKP46"},"source":["str1 = 'Hello world!'\n","str2 = \"This is a Python string.\""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"uO6rTG5fc-Sz"},"source":["# tampilkan str1 dan str2\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"6fVK7oeHrihq"},"source":["Menampilkan tanda petik tunggal atau petik ganda dalam string"]},{"cell_type":"code","metadata":{"id":"3MDy_7Wur6ib"},"source":["print('allows embedded \"double\" quotes')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"5_aGYaCQfMOA"},"source":["print(\"allows embedded 'single' quotes\")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"FWirS8k7d_hb"},"source":["Tanda 3 kali petik dapat digunakan untuk penulisan string yang memiliki lebih dari satu baris"]},{"cell_type":"code","metadata":{"id":"uyW1xnKLeAMp"},"source":["print('''Three single \n","quotes''')\n","\n","print(\"\"\"Three double \n","quotes\"\"\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"E-OlYerGtda-"},"source":["print(\"This is multi\\\n","line statement.\")\n","print(\"\"\"This is multi\n","line string.\"\"\")\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9FPH6T4wep8L"},"source":["Karakter khusus: **tab, newline dan backspace**"]},{"cell_type":"code","metadata":{"id":"hw91TvvhsQDV"},"source":["print(\"this is tab\\t.\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"snrX8Bkfe7Ga"},"source":["print(\"this is new\\nline.\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"UpUOiZKse9Ec"},"source":["print(\"this is backspace\\b.\")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"sW4kukD-9iTp"},"source":["##Updating string\n","\n","String pada python adalah **immutable**. Tidak dapat diubah atau diupdate, Untuk mengubahnya harus membuat string yang baru.\n"]},{"cell_type":"code","metadata":{"id":"Sgg8ItvvfyfZ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637587013460,"user_tz":-420,"elapsed":378,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"ec74c459-5577-4d54-e952-014cf57f5938"},"source":["str2 = \"This is a Python string.\"\n","print(str2)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["This is a Python string.\n"]}]},{"cell_type":"code","metadata":{"id":"3bcw-xNuaE68"},"source":["print(str2.replace('i','_'))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"GYRc44IoaGkr"},"source":["print(str2)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"pu79JT1wm-DD"},"source":["A = \"Hello World!\"\n","A[5] = 'a'"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"JphWq9A8uXVJ"},"source":["##String methods\n"]},{"cell_type":"markdown","metadata":{"id":"yxL5x4pKgbwh"},"source":["Method **lower** digunakan untuk merubah string menjadi huruf kecil (lower case)"]},{"cell_type":"code","metadata":{"id":"6WMjW7EOufPk"},"source":["# tampilkan str2 sebagai lower case\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"KcIwa2B8gv2a"},"source":["Method **find** digunakan untuk mencari posisi pertama kali ditemukannya sebuah substring "]},{"cell_type":"code","metadata":{"id":"2zq3toeCv12i","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637587018527,"user_tz":-420,"elapsed":358,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"cc0f626e-8ed8-44c9-ce5b-edc40a113ea2"},"source":["# cari lokasi is pada str2\n","print(str2.find(\"is\"))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n"]}]},{"cell_type":"code","metadata":{"id":"xct8O6Nihkps"},"source":["# cari lokasi is pada str2 dimulai dari index ke 3\n","print(str2.find(\"is\",3))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Fr7uWzYZgArD"},"source":["List lengkap method pada string --> https://docs.python.org/3/library/stdtypes.html#string-methods "]},{"cell_type":"markdown","metadata":{"id":"14cTLcfxrHde"},"source":["##String Formatting Operators"]},{"cell_type":"code","metadata":{"id":"z8m2pZj1rOAY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637638361780,"user_tz":-420,"elapsed":391,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"29232605-eec7-4af5-cc54-031cd6a12bcc"},"source":["planet = 'Earth'\n","radius = 6371\n","print (\"The %s radius is %d km!\" % (planet,  radius)) "],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The Earth radius is 6371 km!\n"]}]},{"cell_type":"code","metadata":{"id":"fv8NCwZ-iI7r","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637638587325,"user_tz":-420,"elapsed":364,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"3bbdb193-8da4-49b2-f857-0f7c13e93b4d"},"source":["a = 'Mars'; b = 3389.5\n","print (\"The __ radius is __ km!\" % (a,  b))  # b dalam desimal \n","print (\"The __ radius is __ km!\" % (a,  b))  # b dalam float"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The Mars radius is 3389.500000 km!\n","The Mars radius is 3389 km!\n"]}]},{"cell_type":"code","metadata":{"id":"gzW2p0WEw-mG"},"source":["#the f-string formatter\n","print(f\"The {planet} radius is {radius} km!\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"r7nfRBv-xK7O"},"source":["#the format() method\n","print(\"The {0} radius is {1} km!\".format(planet, radius))\n","print(\"The {a} radius is {b} km!\".format(a=\"Mars\", b=3389.5))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"erMdybbyyNt0"},"source":[],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"S12K796hyOm2"},"source":["Untuk string formatting selengkapnya lihat https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting"]},{"cell_type":"markdown","metadata":{"id":"ZxQVkgiS2gcp"},"source":["#4.List"]},{"cell_type":"markdown","metadata":{"id":"iYl6kgTnjK-U"},"source":["List adalah sekumpulan object yang ditandai dengan **kurung siku**.\n","\n","List bersifat heterogen. Elemennya dapat memiliki type yang berbeda-beda"]},{"cell_type":"code","metadata":{"id":"ZXO5SmSd2gcq","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637637933501,"user_tz":-420,"elapsed":343,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"cec50a9f-f00d-4867-abff-c673f8c5e496"},"source":["list1 = ['apple', 'banana', 'strawberry', 100, 100, 200, 10/3]\n","list1"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['apple', 'banana', 'strawberry', 100, 100, 200, 3.3333333333333335]"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","metadata":{"id":"kRrHnJLb-BU6"},"source":["##Updating a list\n","\n","List bersifat mutable, elemennya dapat diupdate, di-delete, maupun direorder"]},{"cell_type":"code","metadata":{"id":"nVCplxxO9w0b"},"source":["# ubah elemen ke 2 menjadi 'cherry'\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pwyVKkKs06P7","executionInfo":{"status":"ok","timestamp":1637638049007,"user_tz":-420,"elapsed":371,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"d6d684d2-2dcf-4add-da63-bafd12a9c398"},"source":["#reverse list\n","\n","list2 = ['apple', 'mango', 'grape', 'banana']\n","print(list2)\n","\n","list2.reverse()\n","print(list2)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['apple', 'mango', 'grape', 'banana']\n","['banana', 'grape', 'mango', 'apple']\n"]}]},{"cell_type":"markdown","metadata":{"id":"PCf_5vC_2gcv"},"source":["##Deleting element"]},{"cell_type":"code","metadata":{"id":"UnotLus1AvKv"},"source":["list1 = ['apple', 'banana', 'strawberry', 100, 100, 200, 10/3]\n","\n","#delete by index\n","del list1[2]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"RzIVAoeJlYcr"},"source":["list1[2]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"gocMjV-glXuS"},"source":["print (\"After deleting value at index 2 : \", list1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"uJWr1dt3BI3I"},"source":["#delete by item\n","list1.remove(100)\n","print (\"After deleting value 100 : \", list1)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"cdxmd4-dA5LD"},"source":["##Appending list"]},{"cell_type":"code","metadata":{"id":"5Y2ydDG7I752"},"source":["#Appends object obj to list\n","list1.append(\"tomato\")\n","print (\"After append  : \", list1)\n","\n","#Appends the contents of seq to list\n","list2 = ['red', 'green', 'blue']\n","list1.extend(list2)\n","print (\"After appends : \", list1)\n","\n","#Appends list object to list\n","list1.append(list2)\n","print (\"After appends : \", list1)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ouqgzyiWKJCt"},"source":["#5.Tuple\n","\n","Tuples menggunakan **parentheses**"]},{"cell_type":"code","metadata":{"id":"Kzk__-7tKKN7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637588072504,"user_tz":-420,"elapsed":771,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"a37303e6-bb48-4f75-f678-bb3721eafa0e"},"source":["seq1 = []\n","seq2 = ()\n","\n","print('Type of collection 01:', type(seq1))\n","print('Type of collection 01:', type(seq2))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Type of collection 01: <class 'list'>\n","Type of collection 01: <class 'tuple'>\n"]}]},{"cell_type":"markdown","metadata":{"id":"AzWHpT7Y0WNm"},"source":["Tuple bersifat heterogen. Elemennya dapat memiliki type yang berbeda-beda"]},{"cell_type":"code","metadata":{"id":"AOWfPcKELxIJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637588103982,"user_tz":-420,"elapsed":543,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"4b58af86-58a5-48c6-c5b0-8398e21a92ef"},"source":["tuple01 = ('sun', 'mon', 'tue', 1, 2/7, ['a','b'])\n","tuple01"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('sun', 'mon', 'tue', 1, 0.2857142857142857, ['a', 'b'])"]},"metadata":{},"execution_count":57}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YqOFL5FA2xr4","executionInfo":{"status":"ok","timestamp":1637637110965,"user_tz":-420,"elapsed":413,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"53b7600a-26bb-4277-dc83-b3cd56483f44"},"source":["#dalam pembuatan tupel, penulisan tanda kurung adalah opsional\n","\n","tuple02 = 'sun', 'mon', 'tue', 1, 2/7, ['a','b']\n","tuple02"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('sun', 'mon', 'tue', 1, 0.2857142857142857, ['a', 'b'])"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","metadata":{"id":"-zn0hgtIvsJ8"},"source":["##Tuple Assignment\n","\n","Tuple assignment adalah fitur yang sangat bermanfaat di Python, yg memungkinkan kita meng-assign multiple value sekaligus"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a6Rm9QvOvQJf","executionInfo":{"status":"ok","timestamp":1637637250210,"user_tz":-420,"elapsed":550,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"51948efc-d761-482e-9772-6a5ee471a19e"},"source":["fruits = 'apple', 'banana', 'cherry'\n","print(fruits)\n","\n","a, b, c = fruits      #disebut juga dengan 'tuple unpacking' \n","print(a, b, c)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["('apple', 'banana', 'cherry')\n","apple banana cherry\n"]}]},{"cell_type":"markdown","metadata":{"id":"4sQnF6vEyAQk"},"source":["tuple assignment bisa digunakan untuk swap variabel"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e3FA_oGqxJW9","executionInfo":{"status":"ok","timestamp":1637637252776,"user_tz":-420,"elapsed":7,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"64f3b41e-d2db-49d4-9f83-325b6c08de3c"},"source":["print(a, b, c)\n","\n","b, c, a = a, b, c\n","print(a, b, c)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["apple banana cherry\n","cherry apple banana\n"]}]},{"cell_type":"markdown","metadata":{"id":"gKk6pBDTMhGt"},"source":["##Updating tuple"]},{"cell_type":"code","metadata":{"id":"xdaa3J98Mj-N"},"source":["#Tuple is immutable, updating is not possible\n","#tup1[1] = 'sat'\n","print(tuple01)\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"w8v0wzbLKCCK"},"source":["#6.Conditional Statement\n"]},{"cell_type":"markdown","metadata":{"id":"XRiQv1CrTeqD"},"source":["##Truth value testing"]},{"cell_type":"code","metadata":{"id":"e_ghWLJ4IUq1"},"source":["#python consider Null, empty sequences, and 0 as False and other as True\n","\n","print(\"Nonzero number = {0}, zero number = {1}\".format(bool(1), bool(0)))\n","print(\"String with value = {0}, empty string = {1}\".format(bool('some string'), bool('')))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"PTcdyjWvSBor"},"source":["list1 = []; list2 = [1,2]\n","print(\"List with value = {0}, empty list = {1}\".format(bool(list2), bool(list1)))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"P7aSxdnNSGOd"},"source":["tuple1 =(); tuple2 = 1,2,3\n","print(\"Tuple with value = {0}, empty tuple = {1}\".format(bool(tuple2), bool(tuple1)))\n","print(\"Null value = {0}\".format(bool(None)))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"B3XLKO2NevQa"},"source":["##Combining logic statement"]},{"cell_type":"code","metadata":{"id":"MKDK3kgley27"},"source":["stat1 = True\n","stat2 = False\n","stat3 = 247\n","stat4 = []\n","\n","print(\"[1,2,3] != [3,2,1] = {0}\".format([1,2,3] != [3,2,1]))\n","#print(\"{1,2,3\\} != \\{3,2,1\\} = {0}\".format({1,2,3} != {3,2,1}))\n","print(\"True and False = {0}\".format(stat1 and stat2))\n","print(\"True and 247 = {0}\".format(stat3 and stat1))\n","print(\"True and empty list = {0}\".format(stat4 and stat1))\n","\n","print(100 and True and 200)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"4WtPKrzklDY9"},"source":["##Simple `if` statement"]},{"cell_type":"code","metadata":{"id":"aoJWlyHglGBs"},"source":["statement = True\n","if statement:\n","    print('statement is True')\n","    \n","if not statement:\n","    print('statement is not True')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"3rOV3QUez_DC"},"source":["empty_list = []\n","if empty_list:\n","    print('empty list is considered True')\n","    \n","if not empty_list:\n","    print('empty list is considered False')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"pXPi49MilGgT"},"source":["##`if-else` statement"]},{"cell_type":"code","metadata":{"id":"AQJyfpoIlJV0"},"source":["statement = True\n","if statement:\n","    print('statement is True')\n","else:\n","    print('statement is not True')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"PKA1OnrQz93y"},"source":["zero_num = 0\n","if zero_num:\n","    print('zero is considered True')\n","else:\n","    print('zero is considered False')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"NqNOXIZPz9wD"},"source":[],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"b2UzZkdSlKII"},"source":["##nested `if` statement"]},{"cell_type":"code","metadata":{"id":"Y3u08mlqlPMk"},"source":["mynum = 6\n","if mynum <= 10:\n","  print(\"Less than or equal to 10\")\n","  if mynum != 5:\n","    if mynum < 5:\n","      print(\"Less than 5\")\n","    else:\n","      print(\"It's either 6, 7, 8, 9 or 10\")\n","  else:\n","    print(\"5\")\n","else:\n","  print(\"Greater than 10\")\n","  if (mynum <= 1000):\n","    print(\"Less than 1000\")\n","  else:\n","    print(\"Pretty big number\")\n","\n","print(\"print anyway\")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"tXSSbwemlPxD"},"source":["##`elif` statement"]},{"cell_type":"code","metadata":{"id":"_3nIi6h_lTF5"},"source":["mynum = 60\n","if mynum <= 5:\n","  print(\"Less than or equal to 5\")\n","elif mynum <= 10:\n","  print(\"It's either 6, 7, 8, 9 or 10\")\n","elif mynum <= 100:\n","  print(\"Between 11 and 1000\")\n","else:\n","  print(\"Pretty big number\")\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"GwgDYwJaSqgB"},"source":["#7.Looping and Iteration\n"]},{"cell_type":"markdown","metadata":{"id":"IKxKm2zvT9OU"},"source":["##`while` loop"]},{"cell_type":"code","metadata":{"id":"kIfyUPPySstj"},"source":["a = 0\n","while a <= 10:\n","  print(\"current a : %d\" % a)\n","  a = a + 1"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"7ecKUm6jStP5"},"source":["##`for` loop"]},{"cell_type":"code","metadata":{"id":"5r2hpqGhSyhZ"},"source":["my_fruit = ['apple', 'banana', 'strawberry', 'cherry', 'grape']\n","for i in my_fruit:\n","  print(\"Let's eat %s!\" % i) "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"wE84cnf4S48R"},"source":[],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"P76HWbY7S6C6"},"source":["Nested loop for handling list of lists"]},{"cell_type":"code","metadata":{"id":"DhBcZ25oTA2h"},"source":["transportations = [['plane', 'helicopter', 'hot air balloon'], \n","         ['bus', 'train', 'truck', 'car'],\n","         ['ship', 'boat', 'canoe', 'raft']]\n","\n","for i in transportations:\n","  print('these are belong in the same group:')\n","  for y in i:\n","    print('\\t- %s' % y)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"P1cBRyg-2xd_"},"source":[],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"12U731Cn2-E4"},"source":["#8.Function\n"]},{"cell_type":"markdown","metadata":{"id":"dw_RKtFkzBvZ"},"source":["##Simple Function"]},{"cell_type":"code","metadata":{"id":"qjecDnUODm3k"},"source":["#simple function\n","def hello_world():\n","  print(\"Hello World!\")\n","\n","#call the function\n","hello_world()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"pFsLJJQHzIx_"},"source":["##Function with 1 param"]},{"cell_type":"code","metadata":{"id":"2msf7rrj4vnN"},"source":["#function with 1 parameter\n","def hello(name):\n","  \"\"\"This function prints out greeting. \n","  It received 1 parameter\"\"\"\n","  print(\"Hello %s!\" % name)\n","\n","#call the function\n","hello(\"World\")\n","hello(\"there\")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"201f4_AdzNNy"},"source":["##Function with return value"]},{"cell_type":"code","metadata":{"id":"0Xd9mpw3CSN6"},"source":["#function with return value\n","def plus(num1, num2):\n","  result = num1 + num2\n","  print(\"{0} + {1} = {2}\".format(num1,num2,result))\n","  return result\n","\n","#call the function\n","plus(10,3)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JtN_en0tD_vg","executionInfo":{"status":"ok","timestamp":1637642350460,"user_tz":-420,"elapsed":381,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"3e674f72-7b1a-41b6-c6bd-50344994c8bf"},"source":["#returns multiple values\n","def calculate_ac(length, wide):\n","  area = length*wide\n","  circumverence = 2*(length+wide)\n","  return area, circumverence\n","\n","#call the function\n","calculate_ac(15,4) #returned as tuple"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(60, 38)"]},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","metadata":{"id":"Uw7WpRIkzPpw"},"source":["##Lambda Function"]},{"cell_type":"code","metadata":{"id":"53Hb9F9aDVpX"},"source":["#lambda function\n","def adds(a,b): \n","    return a+b\n","\n","lambda_adds = lambda a,b: a+b\n","\n","print(adds(4,5)) # using def function\n","print(lambda_adds(4,5)) # using lambda function\n","print((lambda a,b: a+b)(4,5)) # using anonymous lambda function\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"SP5_HgSB3Kt5"},"source":["#9.File Handling"]},{"cell_type":"code","metadata":{"id":"tZgUyu2h3k53"},"source":["import os\n","os.getcwd()\n","os.listdir('sample_data')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"xHgeZUTK3k55"},"source":["my_file = open('sample_data/README.md')\n","my_file"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"tapCVwaz3k56"},"source":["try:\n","  my_file=open('sample_data/README.md')\n","finally:\n","  my_file.close()\n","  print(\"close\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"oxKZiiA_Ybdf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667360187634,"user_tz":-420,"elapsed":398,"user":{"displayName":"Urfah Urfah","userId":"10241733715447857036"}},"outputId":"7a6e459a-208d-4ed2-8935-b9320356217e"},"source":["with open('sample_data/README.md') as my_file:  #use 'with' statement to make sure file handle closed after finish\n","  print(my_file.read(30)) #read 30 bytes from the last position\n","  print(my_file.tell()) #show position in file\n","  print(my_file.seek(30)) #go to position 30 \n","  print(my_file.read(35)) #read 35 bytes from the last position\n","  print(my_file.tell())\n","\n","  print(my_file.readline()) #read a line (read until finding newline)\n","\n","  #my_file.seek(0) #go to the beginning of the file\n","  lines = my_file.readlines()\n","  for line in lines:\n","    print(line, end='')"],"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["This directory includes a few \n","30\n","30\n","sample datasets to get you started.\n","65\n","\n","\n","\n","*   `california_housing_data*.csv` is California housing data from the 1990 US\n","    Census; more information is available at:\n","    https://developers.google.com/machine-learning/crash-course/california-housing-data-description\n","\n","*   `mnist_*.csv` is a small sample of the\n","    [MNIST database](https://en.wikipedia.org/wiki/MNIST_database), which is\n","    described at: http://yann.lecun.com/exdb/mnist/\n","\n","*   `anscombe.json` contains a copy of\n","    [Anscombe's quartet](https://en.wikipedia.org/wiki/Anscombe%27s_quartet); it\n","    was originally described in\n","\n","    Anscombe, F. J. (1973). 'Graphs in Statistical Analysis'. American\n","    Statistician. 27 (1): 17-21. JSTOR 2682899.\n","\n","    and our copy was prepared by the\n","    [vega_datasets library](https://github.com/altair-viz/vega_datasets/blob/4f67bdaad10f45e3549984e17e1b3088c731503d/vega_datasets/_data/anscombe.json).\n"]}]},{"cell_type":"markdown","metadata":{"id":"UthSVVpcIMFE"},"source":["#10.Dictionary\n","\n","Digunakan untuk menyimpan pasangan key-value, yang akan diakses dengan nilai key-nya. Misalnya kamus.\n","\n","dictionary menggunakan kurung kurawal `{}`"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y8CdWRN_IgVs","executionInfo":{"status":"ok","timestamp":1637643274806,"user_tz":-420,"elapsed":356,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"ff28df70-8f10-4c0a-dfbc-031e71e9a32a"},"source":["#menyimpan kata2 dalam bahasa inggris dengan terjemahannya\n","eng2id = {}\n","eng2id[\"one\"] = \"satu\"\n","eng2id[\"two\"] = \"dua\" \n","eng2id[\"three\"] = \"tiga\"\n","eng2id[\"ten\"] = \"sepuluh\"\n","\n","print(eng2id)\n","print(eng2id[\"ten\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'one': 'satu', 'two': 'dua', 'three': 'tiga', 'ten': 'sepuluh'}\n","sepuluh\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oi5KbvPXJVqu","executionInfo":{"status":"ok","timestamp":1637643586387,"user_tz":-420,"elapsed":370,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"0e8b9a5b-ba79-4010-f8fd-015886efe194"},"source":["#cara lain membuat dictionary\n","jadwal = {\"senin\": ['budi','badu','ani'], \n","          \"selasa\": ['romi','yuli','didi'], \n","          \"rabu\": ['ani','badu','yuli'], \n","          \"kamis\": ['budi','romi','didi']}\n","\n","print(jadwal[\"selasa\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['romi', 'yuli', 'didi']\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mry3knIHKk0j","executionInfo":{"status":"ok","timestamp":1637643767231,"user_tz":-420,"elapsed":362,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"bae71dc6-15ca-449e-9e2c-bd7955176a89"},"source":["#dictionary bersifat mutable\n","fruits = {\"apples\": 10, \"bananas\": 20, \"cherry\": 50, \"pears\": 30}\n","print(fruits)\n","\n","fruits[\"bananas\"] = fruits[\"bananas\"] + 5     #update value item\n","del fruits[\"pears\"]                           #delete item\n","print(fruits)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'apples': 10, 'bananas': 20, 'cherry': 50, 'pears': 30}\n","{'apples': 10, 'bananas': 25, 'cherry': 50}\n"]}]},{"cell_type":"markdown","metadata":{"id":"1gupr6BiLw3P"},"source":["#11.Set"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ze-u1SCxTCN2","executionInfo":{"status":"ok","timestamp":1637646531420,"user_tz":-420,"elapsed":11,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"8b1a755f-babf-4b90-f844-a6783fa2aedf"},"source":["s1 = set()\n","print(s1)\n","\n","s2 = {1, 3.14, \"hello!\", (1, 2, 3), True} #set elements can only be immutable objects\n","print(s2)\n","\n","#s3 = {1, 2, [3, 4]} #this will be error, since list is mutable"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["set()\n","{'hello!', 1, 3.14, (1, 2, 3)}\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5YGmL58dLzhy","executionInfo":{"status":"ok","timestamp":1637646529958,"user_tz":-420,"elapsed":409,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"638f4f73-92f5-4eb4-c9ff-437b15d45b15"},"source":["#the set itself is mutable. the elements can be added and deleted\n","x = {1, 3.14, \"hello!\", (1, 2, 3), True}\n","print(x)\n","\n","x.add(\"world!\")                     #adding an item to x\n","print(x)\n","\n","x.update([4, 5, 6])                 #updating x by adding members of an iterables\n","print(x)\n","\n","x.remove(5)                         #remove an element\n","print(x)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'hello!', 1, 3.14, (1, 2, 3)}\n","{1, 3.14, 'world!', 'hello!', (1, 2, 3)}\n","{1, 3.14, 'world!', 4, 5, 6, 'hello!', (1, 2, 3)}\n","{1, 3.14, 'world!', 4, 6, 'hello!', (1, 2, 3)}\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3LwzxzCFVxdB","executionInfo":{"status":"ok","timestamp":1637646615178,"user_tz":-420,"elapsed":400,"user":{"displayName":"Urfah Urfah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjR4lk-vxoH-6Ns8LIMrO9MAm7jVSAposGYZCZeXw=s64","userId":"10241733715447857036"}},"outputId":"83f1ae43-e575-457f-88da-58ad04fb7c83"},"source":["#set is unique. redundant items will be ignored\n","s5 = {1, 1, 2, 2, 3, 5, 100, 100}\n","print(s5)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{1, 2, 3, 100, 5}\n"]}]},{"cell_type":"markdown","metadata":{"id":"M82uojvMp4ij"},"source":["# Revision History"]},{"cell_type":"markdown","metadata":{"id":"AkiqEvC-qItm"},"source":["Release: 2.2111.2301\n","* Add Dictionary & Set\n","* Code cleanup\n","\n","Release: 1.2109.1901\n","* Code cleanup\n"]}]}